name: deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Show repo contents (debug)
        run: |
          pwd
          ls -al

      - name: Ensure remote app dir exists
        run: |
          ssh -o StrictHostKeyChecking=no \
            "${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}" \
            "mkdir -p '${{ secrets.REMOTE_DIR }}/wholesale-needs-approval'"

      # Trailing slash on SOURCE (./) = sync contents of repo root.
      - name: Rsync repo to droplet
        run: |
          rsync -az --delete \
            --exclude ".git/" \
            --exclude ".github/" \
            --exclude "node_modules/" \
            ./ \
            "${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}:${{ secrets.REMOTE_DIR }}/wholesale-needs-approval/"

      - name: Write .env from ENV_FILE secret
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
        run: |
          printf "%s" "$ENV_FILE" | ssh -o StrictHostKeyChecking=no \
            "${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}" \
            "cat > '${{ secrets.REMOTE_DIR }}/wholesale-needs-approval/.env'"

      - name: Install & reload with PM2
        run: |
          ssh -o StrictHostKeyChecking=no \
            "${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}" \
            bash -lc '
              set -e
              source ~/.profile
              cd "${{ secrets.REMOTE_DIR }}/wholesale-needs-approval"
              npm ci || npm i
              if pm2 describe wholesale-needs-approval >/dev/null 2>&1; then
                pm2 reload wholesale-needs-approval --update-env
              else
                pm2 start index.js --name wholesale-needs-approval
              fi
              pm2 save
            '