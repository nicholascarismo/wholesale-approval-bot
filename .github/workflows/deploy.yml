name: deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Show repo contents (debug) 
        run: |
          pwd
          ls -al

      - name: Ensure remote app dir exists
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} \
            "mkdir -p ${{ secrets.REMOTE_DIR }}/wholesale-needs-approval"

      # IMPORTANT:
      # - Trailing slash on the SOURCE (./) means "sync CONTENTS of repo root"
      # - No trailing slash on DEST means "into this directory"
      - name: Rsync repo to droplet
        run: |
          rsync -az --delete \
            --exclude ".git/" \
            --exclude ".github/" \
            --exclude "node_modules/" \
            ./ \
            ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}:${{ secrets.REMOTE_DIR }}/wholesale-needs-approval

      - name: Write .env from ENV_FILE secret
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} \
            "cat > ${{ secrets.REMOTE_DIR }}/wholesale-needs-approval/.env <<'EOF'
${{ secrets.ENV_FILE }}
EOF"

      - name: Install & reload with PM2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} << 'EOSSH'
          set -e
          source ~/.profile
          cd ${{ secrets.REMOTE_DIR }}/wholesale-needs-approval
          npm ci
          # first deploy: start; subsequent deploys: reload
          if pm2 describe wholesale-needs-approval >/dev/null 2>&1; then
            pm2 reload wholesale-needs-approval --update-env
          else
            pm2 start index.js --name wholesale-needs-approval
          fi
          pm2 save
          EOSSH