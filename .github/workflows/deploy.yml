name: Deploy to VPS

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add droplet host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H -p 22 ${{ secrets.DROPLET_HOST }} >> ~/.ssh/known_hosts

      - name: Ensure remote directory exists
        run: ssh "${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}" "mkdir -p '${{ secrets.REMOTE_DIR }}' '${{ secrets.REMOTE_DIR }}/data'"

      - name: Rsync repo to droplet (preserve server data/)
        run: |
          rsync -az --delete \
            --exclude 'node_modules' \
            --exclude '.git' \
            --exclude '.github' \
            --exclude 'data/' \
            ./  "${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}:${{ secrets.REMOTE_DIR }}/"

      - name: Prepare .env from ENV_FILE (runner only)
        run: |
          printf "%s" "${{ secrets.ENV_FILE }}" > .env.deploy

      - name: Upload .env to server
        run: |
          scp .env.deploy "${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}:${{ secrets.REMOTE_DIR }}/.env"
          rm -f .env.deploy

      - name: Build minimal deploy script (no comments)
        run: |
          cat > /tmp/deploy_app.sh << 'SCRIPT'
          #!/usr/bin/env bash
          set -e
          APP_DIR="${{ secrets.REMOTE_DIR }}"
          APP_NAME="${{ secrets.APP_NAME }}"
          APP_DIR="${APP_DIR%/}"
          [ -n "$APP_DIR" ] || { echo "APP_DIR empty"; exit 2; }
          [ -d "$APP_DIR" ] || { echo "APP_DIR missing: $APP_DIR"; exit 2; }
          [ -n "$APP_NAME" ] || APP_NAME="$(basename "$APP_DIR")"
          [ -n "$APP_NAME" ] || { echo "APP_NAME empty"; exit 3; }
          cd "$APP_DIR"
          [ -f .env ] || { echo ".env missing in $APP_DIR"; exit 4; }
          node -v || true
          npm -v || true
          if [ -f package-lock.json ]; then
            npm ci || npm install --production || npm install
          else
            npm install --production || npm install
          fi
          if ! command -v pm2 >/dev/null 2>&1; then
            npm i -g pm2
          fi
          PM2="$(command -v pm2 || echo "")"
          [ -n "$PM2" ] || { echo "pm2 not found after install"; exit 5; }
          "$PM2" delete "$APP_NAME" || true
          "$PM2" start npm --name "$APP_NAME" --cwd "$APP_DIR" -- start
          "$PM2" save
          "$PM2" status "$APP_NAME" || true
          SCRIPT
          sed -i 's/\r$//' /tmp/deploy_app.sh
          chmod +x /tmp/deploy_app.sh

      - name: Run deploy script on server
        run: |
          scp /tmp/deploy_app.sh "${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}:/tmp/deploy_app.sh"
          ssh "${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}" "bash /tmp/deploy_app.sh"